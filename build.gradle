buildscript {
    ext {
        springBootVersion = '1.2.7.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
                "io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE",
                "org.sonarqube.gradle:gradle-sonarqube-plugin:1.0",
                "info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.6")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'org.sonarqube'
apply plugin: "info.solidsoft.pitest"
apply plugin: 'jacoco'


war {
    baseName = 'auction-web'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    providedRuntime
}

dependencies {
    //compile('org.springframework.boot:spring-boot-starter-redis')
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile('org.springframework.boot:spring-boot-starter-hornetq')
    compile('org.springframework.boot:spring-boot-starter-jersey')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-websocket')
    compile("org.springframework.boot:spring-boot-starter-security")
    compile('org.apache.tomcat.embed:tomcat-embed-jasper')
    compile('javax.servlet:jstl')
    compile("org.apache.camel:camel-core:2.16.0")
    compile("org.apache.camel:camel-jms:2.16.0")
    compile("org.apache.camel:camel-spring:2.16.0")
    compile("org.apache.activemq:activemq-camel:5.12.1")
    compile("org.apache.activemq:activemq-pool:5.12.1")
    compile('com.epam.training.auction:auction_common:1.0')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

sonarqube {
    properties {
        property "sonar.host.url", sonarHostUrl
        property "sonar.jdbc.url", sonarJdbcUrl
        property "sonar.jdbc.driverClassName", driverClassName
        property "sonar.jdbc.username", sonarJdbcUsername
        property "sonar.jdbc.password", sonarJdbcPassword
        property "sonar.login", sonarLogin
        property "sonar.password", sonarPassword
        property "sonar.pitest.reportsDirectory", pitestReportsDirectory
        property "sonar.pitest.mode", pitestMode
    }
}

pitest {
    targetClasses = ['com.epam.training.*']
    pitestVersion = "1.1.6"
    threads = 4
    outputFormats = ['XML', 'HTML']
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
